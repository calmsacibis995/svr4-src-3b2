#ident	"@(#)core:setup.icd	1.3.2.6"
ROOT=${ROOT:-"/"}
BOOTBLK=ICDboot

set -- `getopt r:x:b $*` || exit 1

for OPTS in $*
do
	case ${OPTS} in
		-x)	COPY_ONLY=ON
			COPY_TO=$2
			shift 2 ;;
		-r)	ROOT=$2; shift 2 ;;
		-b)	echo $BOOTBLK ; exit ;;
		--)	shift; break ;;
	esac
done

test "$COPY_ONLY" = "ON" && {
	cp $0 ${COPY_TO}
	cd $ROOT
	cpio -pdu ${COPY_TO} <<!
mkfs/inst/bin/wtvtoc
mkfs/inst/bin/absunix
mkfs/inst/etc/vtoc
usr/sbin/mkboot
usr/sbin/cunix
usr/sbin/newboot
etc/mini_system
usr/lib/mboot
usr/lib/flboot
config/ifile4.0
config/mapfile4.0
bin/ld
bin/strip
!
	# Copy all master.d files
	test -d ${COPY_TO}/etc/master.d || mkdir -p ${COPY_TO}/etc/master.d
	cd ${ROOT}/usr/src/uts/3b2/master.d
	cp *  ${COPY_TO}/etc/master.d

	# Copy the drivers that are INCLUDED in mini_system
	test -d ${COPY_TO}/boot || mkdir -p ${COPY_TO}/boot
	cd ${ROOT}/usr/src/uts/3b2
	find . -print|grep "[A-Z]" >/tmp/drivers$$
	grep INCLUDE ${COPY_TO}/etc/mini_system	|
		awk '$2 != "" { print $2}'	|
		while read DRIVER
		do
			cp `grep /${DRIVER}$ /tmp/drivers$$` ${COPY_TO}/boot
		done
	# Copy the KERNEL and drivers that are not explicitly INCLUDED
	# but are implicitly referenced by another driver or master.d file
	cp io/STUBS ${COPY_TO}/boot
	cp KERNEL ${COPY_TO}/boot
	cp GATE ${COPY_TO}/boot
	cp START ${COPY_TO}/boot
	cp exec/elf/ELF ${COPY_TO}/boot
	cp exec/coff/COFF ${COPY_TO}/boot
	cp exec/intp/INTP ${COPY_TO}/boot
	cp io/LOG ${COPY_TO}/boot
	cp io/CLONE ${COPY_TO}/boot

	# Copy the ICD driver. This driver will later be added to 
	# the mini_system file
	cp io/ICD ${COPY_TO}/boot

	rm /tmp/drivers$$
	exit
}

# if [ ! -f /bin/strip ]
# then
# 	echo ""
# 	echo "This setup requires strip(1)"
# 	echo "This command is not present on the hard disk."
# 	exit 2
# fi

echo "Preparing a generic unix for the first restore floppy"

TMP_CMDS=
for CMD in	/usr/sbin/mkboot \
		/usr/sbin/cunix \
		/bin/ld \
		/bin/strip \
		/mkfs/inst/bin/absunix \
		/usr/sbin/newboot \
		/config/ifile4.0 \
		/config/mapfile4.0 \
		/mkfs/inst/bin/wtvtoc
do
	cp ${ROOT}/${CMD} /usr/tmp
	CMD=`basename $CMD`
	chmod 775 /usr/tmp/${CMD}
	TMP_CMDS="$TMP_CMDS /usr/tmp/$CMD"
done

(cd $ROOT;find boot -print|cpio -pd /usr/tmp)

# Hard code major number for SAD driver and re-mkboot the module
sed '/^[a-z]/s/sad	-/sad	30/' ${ROOT}/etc/master.d/sad >/usr/tmp/sad
/usr/tmp/mkboot -m /usr/tmp \
		-d /usr/tmp/boot \
		/usr/tmp/boot/SAD

# Hard code major number for ICD driver and re-mkboot the module
sed '/^[a-z]/s/icd	-/icd	31/' ${ROOT}/etc/master.d/icd >/usr/tmp/icd
/usr/tmp/mkboot -m /usr/tmp \
		-d /usr/tmp/boot \
		/usr/tmp/boot/ICD

# Hard code major number for LOG driver and re-mkboot the module
sed '/^[a-z]/s/log	-/log	34/' ${ROOT}/etc/master.d/log >/usr/tmp/log
/usr/tmp/mkboot -m /usr/tmp \
		-d /usr/tmp/boot \
		/usr/tmp/boot/LOG

# Add a line for ICD driver to the mini_system file
cp $ROOT/etc/mini_system /usr/tmp
grep "^INCLUDE: ICD$" /usr/tmp/mini_system >/dev/null 2>&1 ||
	echo "INCLUDE: ICD" >> /usr/tmp/mini_system
	

/usr/tmp/cunix	\
		-v \
		-c /usr/tmp \
		-f /usr/tmp/mini_system \
		-b /usr/tmp/boot \
		-l /usr/tmp/ld \
		-o /usr/tmp/COREunix || exit 1

/usr/tmp/strip /usr/tmp/COREunix

/usr/tmp/absunix /usr/tmp/COREunix
cp /usr/tmp/COREunix $ROOT
rm /usr/tmp/COREunix

echo "Preparing a boot block for the ICD image"

dd < /usr/tmp/newboot > /usr/tmp/tmp$BOOTBLK bs=512 count=1 seek=18
/usr/tmp/wtvtoc -s $ROOT/mkfs/inst/etc/vtoc -t 3644 /usr/tmp/tmp$BOOTBLK
/usr/tmp/newboot -y $ROOT/usr/lib/flboot $ROOT/usr/lib/mboot /usr/tmp/tmp$BOOTBLK
dd < /usr/tmp/tmp$BOOTBLK > $ROOT/$BOOTBLK bs=512 count=18

rm -rf ${TMP_CMDS}
rm -rf	/usr/tmp/boot \
	/usr/tmp/kernel \
	/usr/tmp/mini_system \
	/usr/tmp/icd \
	/usr/tmp/sad \
	/usr/tmp/log \
	/usr/tmp/tmp$BOOTBLK \
	/usr/tmp/$BOOTBLK

echo "COREunix and ICD boot block completed"
