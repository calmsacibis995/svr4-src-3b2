#ident	"@(#)autoconfig:cunix/errortable	1.11"

/*
 * This file contains the table of all error messages for which the recovery
 * action may need to be altered between the 3B2 and 3B15.
 *
 * In general, the philosophy followed for error recovery is to let the routine
 * which discovered the error do the recovery for the error.  Thus, the majority
 * of actions in the errortab[] are _RETURN_.  The _PANIC_ action is used for
 * "unrecoverable" errors.  
 *
 * When any other action is contemplated, the action code must be synchronized
 * with the routine issuing the error.  In most cases, there is cleanup to be
 * done which can only be handled by the issuing routine itself.
 */

/*
 * The format of this table is:
 *
 *	MESSAGE-ID    FLAGS    "MESSAGE TEXT"
 *
 * Blank lines, and C-style comments are ignored.  Each message line contains
 * two or three fields, separated from each other by white space.  There can be
 * no imbedded white space within MESSAGE-ID or FLAGS.  MESSAGE TEXT is optional;
 * if present, double quotes are used to delimit the message text.  C preprocessor
 * #if statements may be used freely.
 *
 * MESSAGE-ID must be a unique identifier used to refer to the error message.
 * This identifier will be used in "error.h" to construct a C preprocessor
 * definition of the form:
 *
 *		#define MESSAGE-ID <number>
 *
 * FLAGS must be a C expression which evaluates to the flags desired for the
 * error message.  The valid flag values are defined in "lboot.h".
 *
 * "MESSAGE TEXT" is the actual text of the message that will be used by
 * printf() to display the error message.  If it is omitted, the message text
 * is NULL.
 */

ER2	_PANIC_		"MAXCNTL exceeded"
ER3	_PANIC_		"Undefined expression element"
ER5	_PANIC_		"%s: flexname too long"
ER6	_ERROR_		"%s not a regular file"
ER7	_PANIC_		"I/O error ocuured"
#ifdef u3b15
ER8	_RETURN_	"IDFC reset failed"
ER9	_RETURN_	"IDFC sysgen failed"
ER10	_RETURN_	"I/O ERROR: id=0x%lX block=%D count=%d jstat=0x%x erstat=0x%lX xerstat=0x%lX"
ER11	_RETURN_	"IDFC timed out"
#endif
#ifdef u3b2
ER8	_ERROR_		"VTOC read failed"
ER9	_ERROR_		"VTOC does not exist or is damaged"
ER10	_ERROR_		"No boot program specified in %s"
ER11	_ERROR_		"Internal space problems when building conf.o, try -x option"
#endif
ER12	_RETURN_	"Driver %s: not processed by mkboot(1M)"
ER13	_RETURN_	"Driver %s: major number > 127 for old driver or major > 255 for new driver."
ER14	_RETURN_	"Driver %s: missing section .text"
ER15	_RETURN_	"Driver %s: not a valid object file"
ER16	_ERROR_		"%s: No drivers"
ER17	_RETURN_	"LBE ignored at board code %d; LBE must be at board code 14 or 15"
ER18	_RETURN_	"INCLUDE: %s; driver not found or not valid"
ER19	_RETURN_	"INCLUDE: %s; driver is EXCLUDED"
ER20	_RETURN_	"INCLUDE: %s; device not equipped"
ER21	_RETURN_	"EXCLUDE: %s; driver is INCLUDED"
ER22	_RETURN_	"%s: dependent driver %s not available"
ER23	_RETURN_	"%s: dependent driver %s is EXCLUDED"
ER24	_RETURN_	"%s: device not equipped for dependent driver %s"
ER25	_RETURN_	"%s: data initializer #C(%s) unknown; zero assumed"
ER26	_RETURN_	"%s: data initializer #D(%s) unknown; zero assumed"
ER27	_RETURN_	"%s: data initializer #M(%s) unknown; zero assumed"
ER28	_ERROR_		"%s: data initializer &%s cannot be resolved"
ER29	_RETURN_	"%s: data initializer #%s unknown; zero assumed"
ER30	_RETURN_	"%s: data initializer %s unknown; zero assumed"
ER31	_RETURN_	"%s: not executable"
ER32	_ERROR_		"%s: not MAC32 magic"
ER33	_ERROR_		"%s: no section headers"
ER34	_ERROR_		"No drivers available"
ER35	_RETURN_	"%s: device not configured (LBE %d, board code %d)"
ER36	_RETURN_	"%s: required driver is EXCLUDED"
ER37	_RETURN_	"%s: flagged as ONCE only; #C set to 1"
ER38	_RETURN_	"Driver not found for %s device (board slot %d)"
ER39	_RETURN_	"Driver not found for %s device (LBE %d, board code %d)"
ER44	_ERROR_		"unable to assign rootdev or swapdev" 
ER45	_ERROR_		"driver not found for %s device, major = %d, minor = %d"
ER47	_ERROR_		"%s: not flagged as KERNEL by mkboot(1M)"
ER48	_RETURN_	"%s: previously allocated"
ER49	_ERROR_		"%s: truncated read (%s)"
ER50	_RETURN_	"%s: routine %s: unknown id; RNULL assumed"
ER51	_ERROR_		"boot program %s is not a valid object file"
ER53	_RETURN_	"System: line %d; %s"
ER54	_RETURN_	"System: %s"
ER58	_RETURN_	"%s: invalid object file"
ER59	_RETURN_	"%s: truncated string table"
ER60	_ERROR_		"%s: no symbols"
ER62	_RETURN_	"%s: already allocated"
ER65	_RETURN_	"%s: routine %s() not found"
ER66	_RETURN_	"%s: illegal character string initialization; zero assumed"
ER67	_RETURN_	"%s: character string initializer truncated"
ER68	_RETURN_	"System: line %d: too long"
ER69	_RETURN_	"System: line too long"
ER70	_RETURN_	"Parameter %s multiply defined"
ER71	_RETURN_	"          %s: %s = %d"
ER72	_RETURN_	"          %s: %s = %d  (%s EXCLUDED, parameter ignored)"
ER73	_RETURN_	"          %s: %s = %d  (set to zero)"
ER74	_RETURN_	"          %s: %s = \"%s\""
ER75	_RETURN_	"          %s: %s = \"%s\"  (%s EXCLUDED, parameter ignored)"
ER76	_RETURN_	"          %s: %s = \"%s\"  (set to zero)"
ER77	_ERROR_		"can't change directory to %s"
ER79	_ERROR_		"can't open configuration file %s "
ER80	_ERROR_		"can't open or stat %s"
ER81	_RETURN_	"Software driver %s and %s have duplicate major number %d, driver %s will not be loaded"
ER82	_RETURN_	"The major number for software driver %s has not been initialized, check master.d"
ER83	_ERROR_		"Found invalid TC count (%d) for HA in slot %d, device ignore"
ER84	_ERROR_		"Major numbers (%d-%d) assigned to HA in slot %d are below system limit for this type of device"
ER85	_RETURN_	"driver %s not found for TC configured on HA in slot %d, device ignored"
ER86	_RETURN_	"TC Device %s (major number %d) on HA in slot %d not configured"
ER87	_ERROR_		"MAXCNTL exceeded for HA in slot %d"
ER88	_ERROR_		"MAX_LU exceeded for HA %s"
ER89	_RETURN_	"HA in slot %d has bad equipage value, reported %d devices equipped but actually found %d equipped"
ER90	_RETURN_	"%s: data initializer #S(%s) unknown; zero assumed"
ER91	_RETURN_	"Driver missing for boot HA %s slot %d"
ER92	_RETURN_	"Boot HA %s in slot %d has been excluded"
ER93	_RETURN_	"Boot TC %s configured on HA %s slot %d has been excluded"
ER94	_RETURN_	"Driver missing for boot TC %s configured on HA %s slot %d"
ER95	_RETURN_	"%s: no class name specified"
ER101	_RETURN_	"ROOTDEV specification doesn't match VTOC - using ROOTDEV [%d,%d]"
ER102	_RETURN_	"SWAPDEV specification doesn't match VTOC - using SWAPDEV [%d,%d]"
#ifdef u3b15
ER103 _RETURN_		"DUMPDEV specification doesn't match VTOC - using DUMPDEV [%d,%d]"
#endif
ER105	_ERROR_		"ELF access library out of date"
ER106	_RETURN_	"Can't begin elf input file: %s (%s)"
ER107	_RETURN_	"Can't get input ELF section header: %s"
ER108	_RETURN_	"Can't get section header name string"
ER109	_RETURN_	"Can't get %s .config_header; not processed by mkboot(1)?: %s"
ER110	_RETURN_	"NULL .config_header section"
ER111	_RETURN_	"Invalid symbol table in ELF file %s"
ER112	_RETURN_	"Can't open %s; errno = %d"
ER113	_RETURN_	"Can't elf_getphdr; %s"
ER114	_RETURN_	"Can't elf_getshdr; %s"
ER115	_RETURN_	"Can't find string table in ELF file %s"
ER116	_RETURN_	"Can't find ELF symbol %s"
ER117	_RETURN_	"Can't find ELF section with address %x"
ER118	_RETURN_	"Can't get ELF data with address %x"
ER119	_RETURN_	"Can't read ELF HEADER for %s: %s"
ER120	_ERROR_		"Absolute file %s is corrupted, removing"
ER121	_ERROR_		"Can't begin elf input file: %s (%s)"
ER122	_ERROR_		"Invalid symbol table in ELF file %s"
ER123	_RETURN_	"Can't read ELF HEADER for %s: %s"
